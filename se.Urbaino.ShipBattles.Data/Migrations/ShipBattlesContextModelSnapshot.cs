// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using se.Urbaino.ShipBattles.Data;

namespace se.Urbaino.ShipBattles.Data.Migrations
{
    [DbContext(typeof(ShipBattlesContext))]
    partial class ShipBattlesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846");

            modelBuilder.Entity("se.Urbaino.ShipBattles.Domain.Games.Game", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("PlayerA");

                    b.Property<string>("PlayerB");

                    b.Property<int>("State");

                    b.HasKey("Id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("se.Urbaino.ShipBattles.Domain.Games.Game", b =>
                {
                    b.OwnsOne("se.Urbaino.ShipBattles.Domain.GameItems.Board", "BoardA", b1 =>
                        {
                            b1.Property<string>("GameId");

                            b1.Property<int>("Height");

                            b1.Property<int>("Width");

                            b1.ToTable("Games");

                            b1.HasOne("se.Urbaino.ShipBattles.Domain.Games.Game")
                                .WithOne("BoardA")
                                .HasForeignKey("se.Urbaino.ShipBattles.Domain.GameItems.Board", "GameId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("se.Urbaino.ShipBattles.Domain.GameItems.Board", "BoardB", b1 =>
                        {
                            b1.Property<string>("GameId");

                            b1.Property<int>("Height");

                            b1.Property<int>("Width");

                            b1.ToTable("Games");

                            b1.HasOne("se.Urbaino.ShipBattles.Domain.Games.Game")
                                .WithOne("BoardB")
                                .HasForeignKey("se.Urbaino.ShipBattles.Domain.GameItems.Board", "GameId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
